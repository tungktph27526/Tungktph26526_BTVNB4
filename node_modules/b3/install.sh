#!/bin/sh

{

# 检查指定命令是否存在
check_command_exists() {
  type "$1" > /dev/null 2>&1
}

# 检查 NVM 是否存在
check_nvm_installed() {
  profiles=(.profile .bash_profile .bashrc)

  if [ $# -eq 0 ]; then
    idx=0
  else
    idx=$1
  fi

  if [ $idx -eq ${#profiles[*]} ]; then
    return 0
  fi

  file="$HOME/${profiles[$idx]}"

  if [ -f $file ]; then
    source $file

    if check_command_exists "nvm"; then
      echo
      echo "Detected that NVM (`nvm --version`) has already been installed."
      return 1
    fi
  fi

  check_nvm_installed `expr $idx + 1`
}

# 安装 NVM
install_nvm() {
  echo
  echo "NVM has not been installed. It will be downloaded and installed soon..."
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh --progress | bash
}

# 安装 Node.js
install_node() {
  echo
  echo "Install Node.js v$1 with NVM..."
  nvm install $1
  echo
  echo "Node.js (`node -v`) has been successfully installed!"
}

# 安装 Bumblebee
install_b3() {
  echo
  echo "b3 has not been installed. It will be downloaded and installed soon..."
  npm install -g b3
  echo
  echo "b3 (`b3 -v`) has been successfully installed!"
}

# 确保 Node.js 已经安装
ensure_node_installed() {
  echo
  echo "Detecting whether NVM has been installed..."
  check_nvm_installed

  if [ $? -eq 0 ]; then
    install_nvm
    check_nvm_installed

    if [ $? -eq 1 ]; then
      install_node $1
    else
      echo
      echo "An unexpected error occurred..."
      exit 1
    fi
  else
    echo
    nvm use $1

    if ! check_command_exists "node"; then
      install_node $1
    fi
  fi
}

# 检查运行环境
check_env() {
  ensure_node_installed 4

  if ! check_command_exists "b3"; then
    install_b3
  fi
}

check_env

}
